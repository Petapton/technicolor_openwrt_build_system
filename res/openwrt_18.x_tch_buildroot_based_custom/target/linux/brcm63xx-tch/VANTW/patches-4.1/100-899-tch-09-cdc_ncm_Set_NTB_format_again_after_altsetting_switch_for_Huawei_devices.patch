diff -uparN linux-4.1_bak/drivers/net/usb/cdc_ncm.c linux-4.1/drivers/net/usb/cdc_ncm.c
--- linux-4.1_bak/drivers/net/usb/cdc_ncm.c	2018-08-21 16:55:12.084486477 +0800
+++ linux-4.1/drivers/net/usb/cdc_ncm.c	2018-08-21 17:23:10.720523462 +0800
@@ -725,7 +725,10 @@ int cdc_ncm_bind_common(struct usbnet *d
 	u8 *buf;
 	int len;
 	int temp;
+	int err;
 	u8 iface_no;
+	__le16 curr_ntb_format;
+

 	ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);
 	if (!ctx)
@@ -845,6 +848,9 @@ advance:

 	iface_no = ctx->data->cur_altsetting->desc.bInterfaceNumber;

+ 	/* Device-specific flags */
+ 	ctx->drvflags = drvflags;
+
 	/* Reset data interface. Some devices will not reset properly
 	 * unless they are configured first.  Toggle the altsetting to
 	 * force a reset
@@ -874,6 +880,36 @@ advance:
 		goto error2;
 	}

+	/*
+	 * Some Huawei devices have been observed to come out of reset in NDP32 mode.
+	 * Let's check if this is the case, and set the device to NDP16 mode again if
+	 * needed.
+	*/
+	if (ctx->drvflags & CDC_NCM_FLAG_RESET_NTB16) {
+		err = usbnet_read_cmd(dev, USB_CDC_GET_NTB_FORMAT,
+				      USB_TYPE_CLASS | USB_DIR_IN | USB_RECIP_INTERFACE,
+				      0, iface_no, &curr_ntb_format, 2);
+		/* Some dongles (e.g. Vodafone K5160) STALL on this command. In this case
+		 * -EPIPE is returned. When this happens just continue binding the interface
+		 * and do not try setting the device to NDP16 mode.
+		 */
+		if (err != -EPIPE) {
+			if (err < 0) {
+				goto error2;
+			}
+ 			if (curr_ntb_format == cpu_to_le16(USB_CDC_NCM_NTB32_FORMAT)) {
+				dev_info(&intf->dev, "resetting NTB format to 16-bit");
+				err = usbnet_write_cmd(dev, USB_CDC_SET_NTB_FORMAT,
+						       USB_TYPE_CLASS | USB_DIR_OUT
+						       | USB_RECIP_INTERFACE,
+						       USB_CDC_NCM_NTB16_FORMAT,
+						       iface_no, NULL, 0);
+ 				if (err < 0)
+					goto error2;
+			}
+		}
+	}
+
 	cdc_ncm_find_endpoints(dev, ctx->data);
 	cdc_ncm_find_endpoints(dev, ctx->control);
 	if (!dev->in || !dev->out || !dev->status) {
diff -uparN linux-4.1_bak/drivers/net/usb/huawei_cdc_ncm.c linux-4.1/drivers/net/usb/huawei_cdc_ncm.c
--- linux-4.1_bak/drivers/net/usb/huawei_cdc_ncm.c	2018-08-21 16:55:12.084486477 +0800
+++ linux-4.1/drivers/net/usb/huawei_cdc_ncm.c	2018-08-21 17:20:37.744520092 +0800
@@ -80,6 +80,12 @@ static int huawei_cdc_ncm_bind(struct us
 	 * be at the end of the frame.
 	 */
 	drvflags |= CDC_NCM_FLAG_NDP_TO_END;
+
+	/* Additionally, it has been reported that some Huawei E3372H devices, with
+	 * firmware version 21.318.01.00.541, come out of reset in NTB32 format mode, hence
+	 * needing to be set to the NTB16 one again.
+	 */
+	drvflags |= CDC_NCM_FLAG_RESET_NTB16;
 	ret = cdc_ncm_bind_common(usbnet_dev, intf, 1, drvflags);
 	if (ret)
 		goto err;
diff -uparN linux-4.1_bak/include/linux/usb/cdc_ncm.h linux-4.1/include/linux/usb/cdc_ncm.h
--- linux-4.1_bak/include/linux/usb/cdc_ncm.h	2018-08-21 16:55:12.092486477 +0800
+++ linux-4.1/include/linux/usb/cdc_ncm.h	2018-08-21 17:23:45.644524232 +0800
@@ -82,6 +82,7 @@

 /* Driver flags */
 #define CDC_NCM_FLAG_NDP_TO_END	0x02		/* NDP is placed at end of frame */
+#define CDC_NCM_FLAG_RESET_NTB16 0x08	/* set NDP16 one more time after altsetting switch */

 #define cdc_ncm_comm_intf_is_mbim(x)  ((x)->desc.bInterfaceSubClass == USB_CDC_SUBCLASS_MBIM && \
 				       (x)->desc.bInterfaceProtocol == USB_CDC_PROTO_NONE)
